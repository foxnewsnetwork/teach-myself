{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","charAt","toUpperCase","slice","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_3__","Component","pageQuery","PostTags","tags","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","PostCoverComponent","_this$props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path_browserify_default","join","cover","length","react_default","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","backgroundImage","react","PostCover_queryWrapper","gatsby_browser_entry","query","allFile","_590853412","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","components_PostPreview","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","Card_default","path","raise","Media_default","paddingBottom","PostCover","CardTitle_default","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment_default","date","format","SiteConfig_default","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing_PostListing","getPostList","postList","forEach","postEdge","push","fields","slug"],"mappings":"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","file":"component---src-templates-category-jsx-a51e7fc7ccdf0bed7010.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport PostListing from \"../components/PostListing\";\nimport Layout from \"../layout\";\nimport config from \"../../data/SiteConfig\";\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext;\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout\n        location={this.props.location}\n        title={category.charAt(0).toUpperCase() + category.slice(1)}\n      >\n        <div className=\"category-container\">\n          <Helmet>\n            <title>\n              {`Posts in category \"${category}\" | ${config.siteTitle}`}\n            </title>\n            <link\n              rel=\"canonical\"\n              href={`${config.siteUrl}/categories/${category}`}\n            />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}