{"version":3,"sources":["webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./node_modules/react-md/lib/Media/index.js"],"names":["PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","components_PostPreview","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","path","raise","gatsby_browser_entry","Media_default","height","paddingBottom","PostCover","postNode","Media","CardTitle_default","title","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment_default","date","format","SiteConfig_default","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","react","PostListing_PostListing","getPostList","postList","postEdges","forEach","postEdge","push","node","fields","slug","frontmatter","cover","post","Component","PostCoverComponent","_this$props","fileEdges","coverClassName","coverNodeList","filter","fileNode","childImageSharp","absolutePath","indexOf","path_browserify_default","join","length","gatsby_image_default","fluid","outerWrapperClassName","width","coverURL","substring","backgroundImage","PostCover_queryWrapper","query","data","allFile","edges","_590853412","exports","__esModule","MediaOverlay","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default"],"mappings":"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","file":"3-43664ef78205809e1ea5.js","sourcesContent":["import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;"],"sourceRoot":""}