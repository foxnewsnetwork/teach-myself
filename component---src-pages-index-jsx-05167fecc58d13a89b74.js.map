{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["Index","render","postEdges","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","location","title","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_6___default","siteTitle","rel","href","siteUrl","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","Component","__webpack_exports__","pageQuery","PostTags","tags","react__WEBPACK_IMPORTED_MODULE_2___default","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","label","react__WEBPACK_IMPORTED_MODULE_2__","PostCoverComponent","_this$props","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path_browserify_default","join","cover","length","react_default","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","backgroundImage","react","PostCover_queryWrapper","gatsby_browser_entry","query","allFile","_590853412","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","first","shift","replace","i","component","TypeError","push","str","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","__esModule","MediaOverlay","Media","_Media3","_interopRequireDefault","_MediaOverlay3","obj","default","components_PostPreview","PostPreview","_this","_Component","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","Card_default","path","raise","Media_default","paddingBottom","PostCover","CardTitle_default","Buttons_default","raised","secondary","expander","avatar","Avatars_default","icon","FontIcons_default","iconClassName","moment_default","date","format","SiteConfig_default","dateFormat","subtitle","timeToRead","CardText_default","expandable","excerpt","PostListing_PostListing","getPostList","postList","forEach","postEdge","fields","slug","SEO","description","image","postURL","postPath","postSEO","postMeta","url_join__WEBPACK_IMPORTED_MODULE_3___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_4___default","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","content","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-index-jsx-05167fecc58d13a89b74.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../layout\";\nimport PostListing from \"../components/PostListing\";\nimport SEO from \"../components/SEO\";\nimport config from \"../../data/SiteConfig\";\n\nclass Index extends React.Component {\n  render() {\n    const postEdges = this.props.data.allMarkdownRemark.edges;\n    return (\n      <Layout location={this.props.location} title=\"Home\">\n        <div className=\"index-container\">\n          <Helmet>\n            <title>{config.siteTitle}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}`} />\n          </Helmet>\n          <SEO postEdges={postEdges} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport Chip from \"react-md/lib/Chips\";\nimport \"./PostTags.scss\";\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props;\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: \"none\" }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={tag} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\n\nexport default PostTags;\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from \"react\";\nimport Card from \"react-md/lib/Cards/Card\";\nimport CardTitle from \"react-md/lib/Cards/CardTitle\";\nimport Button from \"react-md/lib/Buttons\";\nimport Avatar from \"react-md/lib/Avatars\";\nimport CardText from \"react-md/lib/Cards/CardText\";\nimport FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\nimport moment from \"moment\";\nimport Media, { MediaOverlay } from \"react-md/lib/Media\";\nimport PostTags from \"../PostTags\";\nimport PostCover from \"../PostCover\";\nimport config from \"../../../data/SiteConfig\";\nimport \"./PostPreview.scss\";\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobile: true\n    };\n    this.handleResize = this.handleResize.bind(this);\n  }\n  componentDidMount() {\n    this.handleResize();\n    window.addEventListener(\"resize\", this.handleResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleResize);\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false });\n    } else {\n      this.setState({ mobile: true });\n    }\n  }\n  render() {\n    const { postInfo } = this.props;\n    const { mobile } = this.state;\n    const expand = mobile;\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225;\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: \"none\" }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: \"0px\" }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n            <MediaOverlay>\n              <CardTitle title={postInfo.title}>\n                <Button raised secondary className=\"md-cell--right\">\n                  Read\n                </Button>\n              </CardTitle>\n            </MediaOverlay>\n          </Media>\n        </Link>\n        <CardTitle\n          expander={expand}\n          avatar={<Avatar icon={<FontIcon iconClassName=\"fa fa-calendar\" />} />}\n          title={`Published on ${moment(postInfo.date).format(\n            config.dateFormat\n          )}`}\n          subtitle={`${postInfo.timeToRead} min read`}\n        />\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    );\n  }\n}\n\nexport default PostPreview;\n","import React from \"react\";\nimport PostPreview from \"../PostPreview\";\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const postList = [];\n    this.props.postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      });\n    });\n    return postList;\n  }\n  render() {\n    const postList = this.getPostList();\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"md-grid md-cell--8 mobile-fix\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport urljoin from \"url-join\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n    let title;\n    let description;\n    let image;\n    let postURL;\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      ({ title } = postMeta);\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      image = postMeta.cover;\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\n    } else {\n      title = config.siteTitle;\n      description = config.siteDescription;\n      image = config.siteLogo;\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: title,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: image\n          },\n          description\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n"],"sourceRoot":""}